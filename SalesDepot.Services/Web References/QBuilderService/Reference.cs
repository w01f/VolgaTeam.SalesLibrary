//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace SalesDepot.Services.QBuilderService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QbuilderControllerBinding", Namespace="urn:QbuilderControllerwsdl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(QPageLinkRecord))]
    public partial class QbuilderControllerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getSessionKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPageLogosOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPagesByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLinkCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback isLinkAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback isFolderAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback addLinkToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback emailLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLinkFromCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllFromCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback addLinksToPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLinkFromPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback savePageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback clonePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QbuilderControllerService() {
            this.Url = global::SalesDepot.Services.Properties.Settings.Default.SalesDepot_Services_QBuilderService_QbuilderControllerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getSessionKeyCompletedEventHandler getSessionKeyCompleted;
        
        /// <remarks/>
        public event getPageLogosCompletedEventHandler getPageLogosCompleted;
        
        /// <remarks/>
        public event getAllPagesCompletedEventHandler getAllPagesCompleted;
        
        /// <remarks/>
        public event getPagesByUserCompletedEventHandler getPagesByUserCompleted;
        
        /// <remarks/>
        public event getPageContentCompletedEventHandler getPageContentCompleted;
        
        /// <remarks/>
        public event getLinkCartCompletedEventHandler getLinkCartCompleted;
        
        /// <remarks/>
        public event isLinkAvailableCompletedEventHandler isLinkAvailableCompleted;
        
        /// <remarks/>
        public event isFolderAvailableCompletedEventHandler isFolderAvailableCompleted;
        
        /// <remarks/>
        public event addLinkToCartCompletedEventHandler addLinkToCartCompleted;
        
        /// <remarks/>
        public event emailLinkCompletedEventHandler emailLinkCompleted;
        
        /// <remarks/>
        public event deleteLinkFromCartCompletedEventHandler deleteLinkFromCartCompleted;
        
        /// <remarks/>
        public event deleteAllFromCartCompletedEventHandler deleteAllFromCartCompleted;
        
        /// <remarks/>
        public event addLinksToPageCompletedEventHandler addLinksToPageCompleted;
        
        /// <remarks/>
        public event deleteLinkFromPageCompletedEventHandler deleteLinkFromPageCompleted;
        
        /// <remarks/>
        public event addPageCompletedEventHandler addPageCompleted;
        
        /// <remarks/>
        public event savePageContentCompletedEventHandler savePageContentCompleted;
        
        /// <remarks/>
        public event clonePageCompletedEventHandler clonePageCompleted;
        
        /// <remarks/>
        public event deletePagesCompletedEventHandler deletePagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#getSessionKey", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getSessionKey(string login, string password) {
            object[] results = this.Invoke("getSessionKey", new object[] {
                        login,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionKeyAsync(string login, string password) {
            this.getSessionKeyAsync(login, password, null);
        }
        
        /// <remarks/>
        public void getSessionKeyAsync(string login, string password, object userState) {
            if ((this.getSessionKeyOperationCompleted == null)) {
                this.getSessionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionKeyOperationCompleted);
            }
            this.InvokeAsync("getSessionKey", new object[] {
                        login,
                        password}, this.getSessionKeyOperationCompleted, userState);
        }
        
        private void OngetSessionKeyOperationCompleted(object arg) {
            if ((this.getSessionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionKeyCompleted(this, new getSessionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#getPageLogos", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getPageLogos(string sessionKey) {
            object[] results = this.Invoke("getPageLogos", new object[] {
                        sessionKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getPageLogosAsync(string sessionKey) {
            this.getPageLogosAsync(sessionKey, null);
        }
        
        /// <remarks/>
        public void getPageLogosAsync(string sessionKey, object userState) {
            if ((this.getPageLogosOperationCompleted == null)) {
                this.getPageLogosOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPageLogosOperationCompleted);
            }
            this.InvokeAsync("getPageLogos", new object[] {
                        sessionKey}, this.getPageLogosOperationCompleted, userState);
        }
        
        private void OngetPageLogosOperationCompleted(object arg) {
            if ((this.getPageLogosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPageLogosCompleted(this, new getPageLogosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#getAllPages", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public QPageRecord[] getAllPages(string sessionKey) {
            object[] results = this.Invoke("getAllPages", new object[] {
                        sessionKey});
            return ((QPageRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPagesAsync(string sessionKey) {
            this.getAllPagesAsync(sessionKey, null);
        }
        
        /// <remarks/>
        public void getAllPagesAsync(string sessionKey, object userState) {
            if ((this.getAllPagesOperationCompleted == null)) {
                this.getAllPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPagesOperationCompleted);
            }
            this.InvokeAsync("getAllPages", new object[] {
                        sessionKey}, this.getAllPagesOperationCompleted, userState);
        }
        
        private void OngetAllPagesOperationCompleted(object arg) {
            if ((this.getAllPagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPagesCompleted(this, new getAllPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#getPagesByUser", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public QPageRecord[] getPagesByUser(string sessionKey, string login) {
            object[] results = this.Invoke("getPagesByUser", new object[] {
                        sessionKey,
                        login});
            return ((QPageRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getPagesByUserAsync(string sessionKey, string login) {
            this.getPagesByUserAsync(sessionKey, login, null);
        }
        
        /// <remarks/>
        public void getPagesByUserAsync(string sessionKey, string login, object userState) {
            if ((this.getPagesByUserOperationCompleted == null)) {
                this.getPagesByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPagesByUserOperationCompleted);
            }
            this.InvokeAsync("getPagesByUser", new object[] {
                        sessionKey,
                        login}, this.getPagesByUserOperationCompleted, userState);
        }
        
        private void OngetPagesByUserOperationCompleted(object arg) {
            if ((this.getPagesByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPagesByUserCompleted(this, new getPagesByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#getPageContent", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public QPageRecord getPageContent(string sessionKey, string pageId) {
            object[] results = this.Invoke("getPageContent", new object[] {
                        sessionKey,
                        pageId});
            return ((QPageRecord)(results[0]));
        }
        
        /// <remarks/>
        public void getPageContentAsync(string sessionKey, string pageId) {
            this.getPageContentAsync(sessionKey, pageId, null);
        }
        
        /// <remarks/>
        public void getPageContentAsync(string sessionKey, string pageId, object userState) {
            if ((this.getPageContentOperationCompleted == null)) {
                this.getPageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPageContentOperationCompleted);
            }
            this.InvokeAsync("getPageContent", new object[] {
                        sessionKey,
                        pageId}, this.getPageContentOperationCompleted, userState);
        }
        
        private void OngetPageContentOperationCompleted(object arg) {
            if ((this.getPageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPageContentCompleted(this, new getPageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#getLinkCart", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public QPageLinkRecord[] getLinkCart(string sessionKey, string login) {
            object[] results = this.Invoke("getLinkCart", new object[] {
                        sessionKey,
                        login});
            return ((QPageLinkRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getLinkCartAsync(string sessionKey, string login) {
            this.getLinkCartAsync(sessionKey, login, null);
        }
        
        /// <remarks/>
        public void getLinkCartAsync(string sessionKey, string login, object userState) {
            if ((this.getLinkCartOperationCompleted == null)) {
                this.getLinkCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLinkCartOperationCompleted);
            }
            this.InvokeAsync("getLinkCart", new object[] {
                        sessionKey,
                        login}, this.getLinkCartOperationCompleted, userState);
        }
        
        private void OngetLinkCartOperationCompleted(object arg) {
            if ((this.getLinkCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLinkCartCompleted(this, new getLinkCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#isLinkAvailable", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool isLinkAvailable(string sessionKey, string linkId) {
            object[] results = this.Invoke("isLinkAvailable", new object[] {
                        sessionKey,
                        linkId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isLinkAvailableAsync(string sessionKey, string linkId) {
            this.isLinkAvailableAsync(sessionKey, linkId, null);
        }
        
        /// <remarks/>
        public void isLinkAvailableAsync(string sessionKey, string linkId, object userState) {
            if ((this.isLinkAvailableOperationCompleted == null)) {
                this.isLinkAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisLinkAvailableOperationCompleted);
            }
            this.InvokeAsync("isLinkAvailable", new object[] {
                        sessionKey,
                        linkId}, this.isLinkAvailableOperationCompleted, userState);
        }
        
        private void OnisLinkAvailableOperationCompleted(object arg) {
            if ((this.isLinkAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isLinkAvailableCompleted(this, new isLinkAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#isFolderAvailable", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool isFolderAvailable(string sessionKey, string folderId) {
            object[] results = this.Invoke("isFolderAvailable", new object[] {
                        sessionKey,
                        folderId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isFolderAvailableAsync(string sessionKey, string folderId) {
            this.isFolderAvailableAsync(sessionKey, folderId, null);
        }
        
        /// <remarks/>
        public void isFolderAvailableAsync(string sessionKey, string folderId, object userState) {
            if ((this.isFolderAvailableOperationCompleted == null)) {
                this.isFolderAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisFolderAvailableOperationCompleted);
            }
            this.InvokeAsync("isFolderAvailable", new object[] {
                        sessionKey,
                        folderId}, this.isFolderAvailableOperationCompleted, userState);
        }
        
        private void OnisFolderAvailableOperationCompleted(object arg) {
            if ((this.isFolderAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isFolderAvailableCompleted(this, new isFolderAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#addLinkToCart", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void addLinkToCart(string sessionKey, string login, string linkId, string folderId) {
            this.Invoke("addLinkToCart", new object[] {
                        sessionKey,
                        login,
                        linkId,
                        folderId});
        }
        
        /// <remarks/>
        public void addLinkToCartAsync(string sessionKey, string login, string linkId, string folderId) {
            this.addLinkToCartAsync(sessionKey, login, linkId, folderId, null);
        }
        
        /// <remarks/>
        public void addLinkToCartAsync(string sessionKey, string login, string linkId, string folderId, object userState) {
            if ((this.addLinkToCartOperationCompleted == null)) {
                this.addLinkToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddLinkToCartOperationCompleted);
            }
            this.InvokeAsync("addLinkToCart", new object[] {
                        sessionKey,
                        login,
                        linkId,
                        folderId}, this.addLinkToCartOperationCompleted, userState);
        }
        
        private void OnaddLinkToCartOperationCompleted(object arg) {
            if ((this.addLinkToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addLinkToCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#emailLink", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string emailLink(string sessionKey, string login, string linkId, string subtitle, string createDate, int expiresInDays, bool restricted, bool showLinkToMainSite, string logo) {
            object[] results = this.Invoke("emailLink", new object[] {
                        sessionKey,
                        login,
                        linkId,
                        subtitle,
                        createDate,
                        expiresInDays,
                        restricted,
                        showLinkToMainSite,
                        logo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void emailLinkAsync(string sessionKey, string login, string linkId, string subtitle, string createDate, int expiresInDays, bool restricted, bool showLinkToMainSite, string logo) {
            this.emailLinkAsync(sessionKey, login, linkId, subtitle, createDate, expiresInDays, restricted, showLinkToMainSite, logo, null);
        }
        
        /// <remarks/>
        public void emailLinkAsync(string sessionKey, string login, string linkId, string subtitle, string createDate, int expiresInDays, bool restricted, bool showLinkToMainSite, string logo, object userState) {
            if ((this.emailLinkOperationCompleted == null)) {
                this.emailLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemailLinkOperationCompleted);
            }
            this.InvokeAsync("emailLink", new object[] {
                        sessionKey,
                        login,
                        linkId,
                        subtitle,
                        createDate,
                        expiresInDays,
                        restricted,
                        showLinkToMainSite,
                        logo}, this.emailLinkOperationCompleted, userState);
        }
        
        private void OnemailLinkOperationCompleted(object arg) {
            if ((this.emailLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emailLinkCompleted(this, new emailLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#deleteLinkFromCart", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void deleteLinkFromCart(string sessionKey, string linkInCartId) {
            this.Invoke("deleteLinkFromCart", new object[] {
                        sessionKey,
                        linkInCartId});
        }
        
        /// <remarks/>
        public void deleteLinkFromCartAsync(string sessionKey, string linkInCartId) {
            this.deleteLinkFromCartAsync(sessionKey, linkInCartId, null);
        }
        
        /// <remarks/>
        public void deleteLinkFromCartAsync(string sessionKey, string linkInCartId, object userState) {
            if ((this.deleteLinkFromCartOperationCompleted == null)) {
                this.deleteLinkFromCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLinkFromCartOperationCompleted);
            }
            this.InvokeAsync("deleteLinkFromCart", new object[] {
                        sessionKey,
                        linkInCartId}, this.deleteLinkFromCartOperationCompleted, userState);
        }
        
        private void OndeleteLinkFromCartOperationCompleted(object arg) {
            if ((this.deleteLinkFromCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLinkFromCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#deleteAllFromCart", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void deleteAllFromCart(string sessionKey, string login) {
            this.Invoke("deleteAllFromCart", new object[] {
                        sessionKey,
                        login});
        }
        
        /// <remarks/>
        public void deleteAllFromCartAsync(string sessionKey, string login) {
            this.deleteAllFromCartAsync(sessionKey, login, null);
        }
        
        /// <remarks/>
        public void deleteAllFromCartAsync(string sessionKey, string login, object userState) {
            if ((this.deleteAllFromCartOperationCompleted == null)) {
                this.deleteAllFromCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllFromCartOperationCompleted);
            }
            this.InvokeAsync("deleteAllFromCart", new object[] {
                        sessionKey,
                        login}, this.deleteAllFromCartOperationCompleted, userState);
        }
        
        private void OndeleteAllFromCartOperationCompleted(object arg) {
            if ((this.deleteAllFromCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllFromCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#addLinksToPage", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void addLinksToPage(string sessionKey, string[] linkInCartIds, string pageId) {
            this.Invoke("addLinksToPage", new object[] {
                        sessionKey,
                        linkInCartIds,
                        pageId});
        }
        
        /// <remarks/>
        public void addLinksToPageAsync(string sessionKey, string[] linkInCartIds, string pageId) {
            this.addLinksToPageAsync(sessionKey, linkInCartIds, pageId, null);
        }
        
        /// <remarks/>
        public void addLinksToPageAsync(string sessionKey, string[] linkInCartIds, string pageId, object userState) {
            if ((this.addLinksToPageOperationCompleted == null)) {
                this.addLinksToPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddLinksToPageOperationCompleted);
            }
            this.InvokeAsync("addLinksToPage", new object[] {
                        sessionKey,
                        linkInCartIds,
                        pageId}, this.addLinksToPageOperationCompleted, userState);
        }
        
        private void OnaddLinksToPageOperationCompleted(object arg) {
            if ((this.addLinksToPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addLinksToPageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#deleteLinkFromPage", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void deleteLinkFromPage(string sessionKey, string linkInPageId) {
            this.Invoke("deleteLinkFromPage", new object[] {
                        sessionKey,
                        linkInPageId});
        }
        
        /// <remarks/>
        public void deleteLinkFromPageAsync(string sessionKey, string linkInPageId) {
            this.deleteLinkFromPageAsync(sessionKey, linkInPageId, null);
        }
        
        /// <remarks/>
        public void deleteLinkFromPageAsync(string sessionKey, string linkInPageId, object userState) {
            if ((this.deleteLinkFromPageOperationCompleted == null)) {
                this.deleteLinkFromPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLinkFromPageOperationCompleted);
            }
            this.InvokeAsync("deleteLinkFromPage", new object[] {
                        sessionKey,
                        linkInPageId}, this.deleteLinkFromPageOperationCompleted, userState);
        }
        
        private void OndeleteLinkFromPageOperationCompleted(object arg) {
            if ((this.deleteLinkFromPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLinkFromPageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#addPage", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string addPage(string sessionKey, string login, string title, string createDate) {
            object[] results = this.Invoke("addPage", new object[] {
                        sessionKey,
                        login,
                        title,
                        createDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPageAsync(string sessionKey, string login, string title, string createDate) {
            this.addPageAsync(sessionKey, login, title, createDate, null);
        }
        
        /// <remarks/>
        public void addPageAsync(string sessionKey, string login, string title, string createDate, object userState) {
            if ((this.addPageOperationCompleted == null)) {
                this.addPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPageOperationCompleted);
            }
            this.InvokeAsync("addPage", new object[] {
                        sessionKey,
                        login,
                        title,
                        createDate}, this.addPageOperationCompleted, userState);
        }
        
        private void OnaddPageOperationCompleted(object arg) {
            if ((this.addPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPageCompleted(this, new addPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#savePageContent", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void savePageContent(string sessionKey, string pageId, string title, string description, string header, string footer, string expirationDate, bool requireLogin, bool showLinkToMainSite, bool showTicker, bool disableBanners, bool disableWidgets, bool recordActivity, string pinCode, string logo) {
            this.Invoke("savePageContent", new object[] {
                        sessionKey,
                        pageId,
                        title,
                        description,
                        header,
                        footer,
                        expirationDate,
                        requireLogin,
                        showLinkToMainSite,
                        showTicker,
                        disableBanners,
                        disableWidgets,
                        recordActivity,
                        pinCode,
                        logo});
        }
        
        /// <remarks/>
        public void savePageContentAsync(string sessionKey, string pageId, string title, string description, string header, string footer, string expirationDate, bool requireLogin, bool showLinkToMainSite, bool showTicker, bool disableBanners, bool disableWidgets, bool recordActivity, string pinCode, string logo) {
            this.savePageContentAsync(sessionKey, pageId, title, description, header, footer, expirationDate, requireLogin, showLinkToMainSite, showTicker, disableBanners, disableWidgets, recordActivity, pinCode, logo, null);
        }
        
        /// <remarks/>
        public void savePageContentAsync(
                    string sessionKey, 
                    string pageId, 
                    string title, 
                    string description, 
                    string header, 
                    string footer, 
                    string expirationDate, 
                    bool requireLogin, 
                    bool showLinkToMainSite, 
                    bool showTicker, 
                    bool disableBanners, 
                    bool disableWidgets, 
                    bool recordActivity, 
                    string pinCode, 
                    string logo, 
                    object userState) {
            if ((this.savePageContentOperationCompleted == null)) {
                this.savePageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsavePageContentOperationCompleted);
            }
            this.InvokeAsync("savePageContent", new object[] {
                        sessionKey,
                        pageId,
                        title,
                        description,
                        header,
                        footer,
                        expirationDate,
                        requireLogin,
                        showLinkToMainSite,
                        showTicker,
                        disableBanners,
                        disableWidgets,
                        recordActivity,
                        pinCode,
                        logo}, this.savePageContentOperationCompleted, userState);
        }
        
        private void OnsavePageContentOperationCompleted(object arg) {
            if ((this.savePageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.savePageContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#clonePage", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string clonePage(string sessionKey, string login, string clonedPageId, string title, string createDate) {
            object[] results = this.Invoke("clonePage", new object[] {
                        sessionKey,
                        login,
                        clonedPageId,
                        title,
                        createDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void clonePageAsync(string sessionKey, string login, string clonedPageId, string title, string createDate) {
            this.clonePageAsync(sessionKey, login, clonedPageId, title, createDate, null);
        }
        
        /// <remarks/>
        public void clonePageAsync(string sessionKey, string login, string clonedPageId, string title, string createDate, object userState) {
            if ((this.clonePageOperationCompleted == null)) {
                this.clonePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclonePageOperationCompleted);
            }
            this.InvokeAsync("clonePage", new object[] {
                        sessionKey,
                        login,
                        clonedPageId,
                        title,
                        createDate}, this.clonePageOperationCompleted, userState);
        }
        
        private void OnclonePageOperationCompleted(object arg) {
            if ((this.clonePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clonePageCompleted(this, new clonePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:QbuilderControllerwsdl#deletePages", RequestNamespace="urn:QbuilderControllerwsdl", ResponseNamespace="urn:QbuilderControllerwsdl")]
        public void deletePages(string sessionKey, string[] pageIds) {
            this.Invoke("deletePages", new object[] {
                        sessionKey,
                        pageIds});
        }
        
        /// <remarks/>
        public void deletePagesAsync(string sessionKey, string[] pageIds) {
            this.deletePagesAsync(sessionKey, pageIds, null);
        }
        
        /// <remarks/>
        public void deletePagesAsync(string sessionKey, string[] pageIds, object userState) {
            if ((this.deletePagesOperationCompleted == null)) {
                this.deletePagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePagesOperationCompleted);
            }
            this.InvokeAsync("deletePages", new object[] {
                        sessionKey,
                        pageIds}, this.deletePagesOperationCompleted, userState);
        }
        
        private void OndeletePagesOperationCompleted(object arg) {
            if ((this.deletePagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:QbuilderControllerwsdl")]
    public partial class QPageRecord {
        
        private string idField;
        
        private string titleField;
        
        private bool isEmailField;
        
        private string urlField;
        
        private string createDateField;
        
        private string expirationDateField;
        
        private string subtitleField;
        
        private string headerField;
        
        private string footerField;
        
        private bool isRestrictedField;
        
        private bool showLinkMainSiteField;
        
        private bool showTickerField;
        
        private bool disableBannersField;
        
        private bool disableWidgetsField;
        
        private bool recordActivityField;
        
        private string pinCodeField;
        
        private string logoField;
        
        private QPageLinkRecord[] linksField;
        
        private string loginField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string groupsField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool isEmail {
            get {
                return this.isEmailField;
            }
            set {
                this.isEmailField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string subtitle {
            get {
                return this.subtitleField;
            }
            set {
                this.subtitleField = value;
            }
        }
        
        /// <remarks/>
        public string header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        public string footer {
            get {
                return this.footerField;
            }
            set {
                this.footerField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool showLinkMainSite {
            get {
                return this.showLinkMainSiteField;
            }
            set {
                this.showLinkMainSiteField = value;
            }
        }
        
        /// <remarks/>
        public bool showTicker {
            get {
                return this.showTickerField;
            }
            set {
                this.showTickerField = value;
            }
        }
        
        /// <remarks/>
        public bool disableBanners {
            get {
                return this.disableBannersField;
            }
            set {
                this.disableBannersField = value;
            }
        }
        
        /// <remarks/>
        public bool disableWidgets {
            get {
                return this.disableWidgetsField;
            }
            set {
                this.disableWidgetsField = value;
            }
        }
        
        /// <remarks/>
        public bool recordActivity {
            get {
                return this.recordActivityField;
            }
            set {
                this.recordActivityField = value;
            }
        }
        
        /// <remarks/>
        public string pinCode {
            get {
                return this.pinCodeField;
            }
            set {
                this.pinCodeField = value;
            }
        }
        
        /// <remarks/>
        public string logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        public QPageLinkRecord[] links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:QbuilderControllerwsdl")]
    public partial class QPageLinkRecord {
        
        private string idField;
        
        private string parentIdField;
        
        private string linkIdField;
        
        private string libraryIdField;
        
        private string nameField;
        
        private string fileNameField;
        
        private string libraryNameField;
        
        private string logoField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string parentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public string linkId {
            get {
                return this.linkIdField;
            }
            set {
                this.linkIdField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string libraryName {
            get {
                return this.libraryNameField;
            }
            set {
                this.libraryNameField = value;
            }
        }
        
        /// <remarks/>
        public string logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSessionKeyCompletedEventHandler(object sender, getSessionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPageLogosCompletedEventHandler(object sender, getPageLogosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPageLogosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPageLogosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllPagesCompletedEventHandler(object sender, getAllPagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QPageRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QPageRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPagesByUserCompletedEventHandler(object sender, getPagesByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPagesByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPagesByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QPageRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QPageRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPageContentCompletedEventHandler(object sender, getPageContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPageContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPageContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QPageRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QPageRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLinkCartCompletedEventHandler(object sender, getLinkCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLinkCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLinkCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QPageLinkRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QPageLinkRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isLinkAvailableCompletedEventHandler(object sender, isLinkAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isLinkAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isLinkAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isFolderAvailableCompletedEventHandler(object sender, isFolderAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isFolderAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isFolderAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addLinkToCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void emailLinkCompletedEventHandler(object sender, emailLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emailLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emailLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteLinkFromCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllFromCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addLinksToPageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteLinkFromPageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addPageCompletedEventHandler(object sender, addPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void savePageContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void clonePageCompletedEventHandler(object sender, clonePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clonePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clonePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deletePagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591