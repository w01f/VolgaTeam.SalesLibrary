<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:ContentControllerwsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap-enc="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://schemas.xmlsoap.org/wsdl/" name="ContentController" targetNamespace="urn:ContentControllerwsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="urn:ContentControllerwsdl">
      <xsd:complexType name="SoapLibrary">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="pages" type="tns:SoapLibraryPageArray" />
          <xsd:element name="autoWidgets" type="tns:SoapAutoWidgetArray" />
          <xsd:element name="previewContainers" type="tns:SoapUniversalPreviewContainerArray" />
          <xsd:element name="selected" type="xsd:boolean" />
          <xsd:element name="config" type="tns:LibraryConfig" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryPageArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapLibraryPage[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryPage">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="libraryName" type="xsd:string" />
          <xsd:element name="order" type="xsd:int" />
          <xsd:element name="settings" type="tns:SoapLibraryPageSettings" />
          <xsd:element name="folders" type="tns:SoapLibraryFolderArray" />
          <xsd:element name="enableColumns" type="xsd:boolean" />
          <xsd:element name="columns" type="tns:SoapColumnArray" />
          <xsd:element name="dateModify" type="xsd:string" />
          <xsd:element name="selected" type="xsd:boolean" />
          <xsd:element name="groups" type="tns:GroupModelArray" />
          <xsd:element name="allGroups" type="xsd:boolean" />
          <xsd:element name="users" type="tns:UserModelArray" />
          <xsd:element name="allUsers" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryPageSettings">
        <xsd:all>
          <xsd:element name="icon" type="xsd:string" />
          <xsd:element name="iconColor" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryFolderArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapLibraryFolder[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryFolder">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="pageId" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="rowOrder" type="xsd:int" />
          <xsd:element name="columnOrder" type="xsd:int" />
          <xsd:element name="borderColor" type="xsd:string" />
          <xsd:element name="windowBackColor" type="xsd:string" />
          <xsd:element name="windowForeColor" type="xsd:string" />
          <xsd:element name="headerBackColor" type="xsd:string" />
          <xsd:element name="headerForeColor" type="xsd:string" />
          <xsd:element name="windowFont" type="tns:Font" />
          <xsd:element name="headerFont" type="tns:Font" />
          <xsd:element name="headerAlignment" type="xsd:string" />
          <xsd:element name="enableWidget" type="xsd:boolean" />
          <xsd:element name="widget" type="xsd:string" />
          <xsd:element name="banner" type="tns:SoapBanner" />
          <xsd:element name="files" type="tns:SoapLibraryLinkArray" />
          <xsd:element name="dateAdd" type="xsd:string" />
          <xsd:element name="dateModify" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="Font">
        <xsd:all>
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="size" type="xsd:int" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderlined" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapBanner">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="isEnabled" type="xsd:boolean" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="showText" type="xsd:boolean" />
          <xsd:element name="imageAlignment" type="xsd:string" />
          <xsd:element name="imageVerticalAlignment" type="xsd:string" />
          <xsd:element name="text" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="dateModify" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryLinkArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapLibraryLink[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryLink">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="parentLinkId" type="xsd:string" />
          <xsd:element name="folderId" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="fileRelativePath" type="xsd:string" />
          <xsd:element name="fileName" type="xsd:string" />
          <xsd:element name="fileExtension" type="xsd:string" />
          <xsd:element name="fileDate" type="xsd:string" />
          <xsd:element name="fileSize" type="xsd:int" />
          <xsd:element name="originalFormat" type="xsd:string" />
          <xsd:element name="searchFormat" type="xsd:string" />
          <xsd:element name="order" type="xsd:int" />
          <xsd:element name="type" type="xsd:int" />
          <xsd:element name="extendedProperties" type="tns:BaseLinkSettings" />
          <xsd:element name="lineBreakProperties" type="tns:LineBreak" />
          <xsd:element name="widgetType" type="xsd:int" />
          <xsd:element name="widget" type="xsd:string" />
          <xsd:element name="banner" type="tns:SoapBanner" />
          <xsd:element name="thumbnail" type="tns:SoapThumbnail" />
          <xsd:element name="previewId" type="xsd:string" />
          <xsd:element name="superFilters" type="tns:LinkSuperFilterArray" />
          <xsd:element name="categories" type="tns:LinkCategoryArray" />
          <xsd:element name="tags" type="xsd:string" />
          <xsd:element name="dateAdd" type="xsd:string" />
          <xsd:element name="dateModify" type="xsd:string" />
          <xsd:element name="contentPath" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="BaseLinkSettings">
        <xsd:all>
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LineBreak">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="dateModify" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapThumbnail">
        <xsd:all>
          <xsd:element name="isEnabled" type="xsd:boolean" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="imagePadding" type="xsd:int" />
          <xsd:element name="imageAlignment" type="xsd:string" />
          <xsd:element name="showText" type="xsd:boolean" />
          <xsd:element name="text" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="textPosition" type="xsd:string" />
          <xsd:element name="textAlignment" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkSuperFilterArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:LinkSuperFilter[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="LinkSuperFilter">
        <xsd:all>
          <xsd:element name="linkId" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="value" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkCategoryArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:LinkCategory[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="LinkCategory">
        <xsd:all>
          <xsd:element name="linkId" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="group" type="xsd:string" />
          <xsd:element name="category" type="xsd:string" />
          <xsd:element name="tag" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapColumnArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapColumn[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapColumn">
        <xsd:all>
          <xsd:element name="pageId" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="order" type="xsd:int" />
          <xsd:element name="backColor" type="xsd:string" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="showText" type="xsd:boolean" />
          <xsd:element name="alignment" type="xsd:string" />
          <xsd:element name="enableWidget" type="xsd:boolean" />
          <xsd:element name="widget" type="xsd:string" />
          <xsd:element name="banner" type="tns:SoapBanner" />
          <xsd:element name="dateModify" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="GroupModelArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:GroupModel[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GroupModel">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="name" type="xsd:string" />
          <xsd:element name="selected" type="xsd:boolean" />
          <xsd:element name="users" type="tns:UserModelArray" />
          <xsd:element name="allUsers" type="xsd:boolean" />
          <xsd:element name="libraries" type="tns:SoapLibraryArray" />
          <xsd:element name="libraryIds" type="tns:stringArray" />
          <xsd:element name="allLibraries" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="UserModelArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:UserModel[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="UserModel">
        <xsd:all>
          <xsd:element name="id" type="xsd:int" />
          <xsd:element name="login" type="xsd:string" />
          <xsd:element name="password" type="xsd:string" />
          <xsd:element name="firstName" type="xsd:string" />
          <xsd:element name="lastName" type="xsd:string" />
          <xsd:element name="email" type="xsd:string" />
          <xsd:element name="phone" type="xsd:string" />
          <xsd:element name="role" type="xsd:int" />
          <xsd:element name="selected" type="xsd:boolean" />
          <xsd:element name="dateAdd" type="xsd:string" />
          <xsd:element name="dateModify" type="xsd:string" />
          <xsd:element name="groups" type="tns:GroupModelArray" />
          <xsd:element name="groupNames" type="xsd:string" />
          <xsd:element name="allGroups" type="xsd:boolean" />
          <xsd:element name="libraries" type="tns:SoapLibraryArray" />
          <xsd:element name="allLibraries" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapLibraryArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapLibrary[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="stringArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="xsd:string[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapAutoWidgetArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapAutoWidget[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapAutoWidget">
        <xsd:all>
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="extension" type="xsd:string" />
          <xsd:element name="widget" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="SoapUniversalPreviewContainerArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:SoapUniversalPreviewContainer[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapUniversalPreviewContainer">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="pngLinks" type="tns:stringArray" />
          <xsd:element name="pngPhoneLinks" type="tns:stringArray" />
          <xsd:element name="pdfLinks" type="tns:stringArray" />
          <xsd:element name="mp4Links" type="tns:stringArray" />
          <xsd:element name="mp4ThumbLinks" type="tns:stringArray" />
          <xsd:element name="newOfficeFormatLinks" type="tns:stringArray" />
          <xsd:element name="thumbsLinks" type="tns:stringArray" />
          <xsd:element name="thumbsPhoneLinks" type="tns:stringArray" />
          <xsd:element name="thumbsWidth" type="xsd:int" />
          <xsd:element name="thumbsHeight" type="xsd:int" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LibraryConfig">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="libraryId" type="xsd:string" />
          <xsd:element name="deadLinkSender" type="xsd:string" />
          <xsd:element name="deadLinkRecipients" type="xsd:string" />
          <xsd:element name="deadLinkSubject" type="xsd:string" />
          <xsd:element name="deadLinkBody" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="VideoLinkSettings">
        <xsd:all>
          <xsd:element name="forcePreview" type="xsd:boolean" />
          <xsd:element name="downloadSource" type="xsd:boolean" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="HyperLinkSettings">
        <xsd:all>
          <xsd:element name="forcePreview" type="xsd:boolean" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PowerPointLinkSettings">
        <xsd:all>
          <xsd:element name="slideWidth" type="xsd:float" />
          <xsd:element name="slideHeight" type="xsd:float" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="DocumentLinkSettings">
        <xsd:all>
          <xsd:element name="forcePreview" type="xsd:boolean" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="AppLinkSettings">
        <xsd:all>
          <xsd:element name="secondPath" type="xsd:string" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="InternalWallbinLinkSettings">
        <xsd:all>
          <xsd:element name="internalLinkType" type="xsd:int" />
          <xsd:element name="libraryName" type="xsd:string" />
          <xsd:element name="pageName" type="xsd:string" />
          <xsd:element name="showHeaderText" type="xsd:boolean" />
          <xsd:element name="openOnSamePage" type="xsd:boolean" />
          <xsd:element name="styleSettingsEncoded" type="xsd:string" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="InternalLibraryPageLinkSettings">
        <xsd:all>
          <xsd:element name="internalLinkType" type="xsd:int" />
          <xsd:element name="libraryName" type="xsd:string" />
          <xsd:element name="pageName" type="xsd:string" />
          <xsd:element name="showHeaderText" type="xsd:boolean" />
          <xsd:element name="openOnSamePage" type="xsd:boolean" />
          <xsd:element name="styleSettingsEncoded" type="xsd:string" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="InternalLibraryFolderLinkSettings">
        <xsd:all>
          <xsd:element name="internalLinkType" type="xsd:int" />
          <xsd:element name="libraryName" type="xsd:string" />
          <xsd:element name="pageName" type="xsd:string" />
          <xsd:element name="windowName" type="xsd:string" />
          <xsd:element name="showHeaderText" type="xsd:boolean" />
          <xsd:element name="openOnSamePage" type="xsd:boolean" />
          <xsd:element name="styleSettingsEncoded" type="xsd:string" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="InternalLibraryObjectLinkSettings">
        <xsd:all>
          <xsd:element name="internalLinkType" type="xsd:int" />
          <xsd:element name="libraryName" type="xsd:string" />
          <xsd:element name="pageName" type="xsd:string" />
          <xsd:element name="windowName" type="xsd:string" />
          <xsd:element name="linkName" type="xsd:string" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="InternalShortcutLinkSettings">
        <xsd:all>
          <xsd:element name="internalLinkType" type="xsd:int" />
          <xsd:element name="shortcutId" type="xsd:string" />
          <xsd:element name="openOnSamePage" type="xsd:boolean" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="ExcelLinkSettings">
        <xsd:all>
          <xsd:element name="forceDownload" type="xsd:boolean" />
          <xsd:element name="forceOpen" type="xsd:boolean" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="QPageLinkSettings">
        <xsd:all>
          <xsd:element name="qpageId" type="xsd:string" />
          <xsd:element name="forcePreview" type="xsd:boolean" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleLinkSettings">
        <xsd:all>
          <xsd:element name="customWebFormat" type="xsd:string" />
          <xsd:element name="bundleItems" type="tns:BaseLinkBundleItemArray" />
          <xsd:element name="note" type="xsd:string" />
          <xsd:element name="hoverNote" type="xsd:string" />
          <xsd:element name="showOnlyCustomHoverNote" type="xsd:boolean" />
          <xsd:element name="isBold" type="xsd:boolean" />
          <xsd:element name="isItalic" type="xsd:boolean" />
          <xsd:element name="isUnderline" type="xsd:boolean" />
          <xsd:element name="isSpecialFormat" type="xsd:boolean" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="isTextWordWrap" type="xsd:boolean" />
          <xsd:element name="isRestricted" type="xsd:boolean" />
          <xsd:element name="noShare" type="xsd:boolean" />
          <xsd:element name="assignedUsers" type="xsd:string" />
          <xsd:element name="deniedUsers" type="xsd:string" />
          <xsd:element name="quickLinkUrl" type="xsd:string" />
          <xsd:element name="quickLinkTitle" type="xsd:string" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="BaseLinkBundleItemArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:BaseLinkBundleItem[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="BaseLinkBundleItem">
        <xsd:all>
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LibraryLinkBundleItem">
        <xsd:all>
          <xsd:element name="libraryLinkId" type="xsd:string" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="UrlLinkBundleItem">
        <xsd:all>
          <xsd:element name="url" type="xsd:string" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleCoverItem">
        <xsd:all>
          <xsd:element name="logo" type="xsd:string" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleLaunchScreenItem">
        <xsd:all>
          <xsd:element name="header" type="xsd:string" />
          <xsd:element name="footer" type="xsd:string" />
          <xsd:element name="logo" type="xsd:string" />
          <xsd:element name="banner" type="xsd:string" />
          <xsd:element name="headerForeColor" type="xsd:string" />
          <xsd:element name="headerBackColor" type="xsd:string" />
          <xsd:element name="headerFont" type="tns:Font" />
          <xsd:element name="footerForeColor" type="xsd:string" />
          <xsd:element name="footerBackColor" type="xsd:string" />
          <xsd:element name="footerFont" type="tns:Font" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleInfoItem">
        <xsd:all>
          <xsd:element name="header" type="xsd:string" />
          <xsd:element name="body" type="xsd:string" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="backColor" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleStrategyItem">
        <xsd:all>
          <xsd:element name="header" type="xsd:string" />
          <xsd:element name="body" type="xsd:string" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="backColor" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleRevenueItem">
        <xsd:all>
          <xsd:element name="revenueType" type="xsd:int" />
          <xsd:element name="additionalInfo" type="xsd:string" />
          <xsd:element name="infoItems" type="tns:LinkBundleRevenueInfoItemArray" />
          <xsd:element name="foreColor" type="xsd:string" />
          <xsd:element name="backColor" type="xsd:string" />
          <xsd:element name="font" type="tns:Font" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="itemType" type="xsd:int" />
          <xsd:element name="visible" type="xsd:boolean" />
          <xsd:element name="collectionOrder" type="xsd:int" />
          <xsd:element name="image" type="xsd:string" />
          <xsd:element name="title" type="xsd:string" />
          <xsd:element name="hoverTip" type="xsd:string" />
          <xsd:element name="useAsThumbnail" type="xsd:boolean" />
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleRevenueInfoItemArray">
        <xsd:complexContent mixed="false">
          <xsd:restriction base="soap-enc:Array">
            <xsd:attribute wsdl:arrayType="tns:LinkBundleRevenueInfoItem[]" ref="soap-enc:arrayType" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="LinkBundleRevenueInfoItem">
        <xsd:all>
          <xsd:element name="infoType" type="xsd:string" />
          <xsd:element name="value" type="xsd:float" />
        </xsd:all>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="mockLibraryIn">
    <wsdl:part name="library" type="tns:SoapLibrary" />
  </wsdl:message>
  <wsdl:message name="mockLibraryOut" />
  <wsdl:message name="mockVideoLinkSettingsIn">
    <wsdl:part name="settings" type="tns:VideoLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockVideoLinkSettingsOut" />
  <wsdl:message name="mockHyperLinkSettingsIn">
    <wsdl:part name="settings" type="tns:HyperLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockHyperLinkSettingsOut" />
  <wsdl:message name="mockPowerPointLinkSettingsIn">
    <wsdl:part name="settings" type="tns:PowerPointLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockPowerPointLinkSettingsOut" />
  <wsdl:message name="mockPowerDocumentSettingsIn">
    <wsdl:part name="settings" type="tns:DocumentLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockPowerDocumentSettingsOut" />
  <wsdl:message name="mockAppLinkSettingsIn">
    <wsdl:part name="settings" type="tns:AppLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockAppLinkSettingsOut" />
  <wsdl:message name="mockInternalWallbinLinkSettingsIn">
    <wsdl:part name="settings" type="tns:InternalWallbinLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockInternalWallbinLinkSettingsOut" />
  <wsdl:message name="mockInternalLibraryPageLinkSettingsIn">
    <wsdl:part name="settings" type="tns:InternalLibraryPageLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockInternalLibraryPageLinkSettingsOut" />
  <wsdl:message name="mockInternalLibraryFolderLinkSettingsIn">
    <wsdl:part name="settings" type="tns:InternalLibraryFolderLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockInternalLibraryFolderLinkSettingsOut" />
  <wsdl:message name="mockInternalLibraryObjectLinkSettingsIn">
    <wsdl:part name="settings" type="tns:InternalLibraryObjectLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockInternalLibraryObjectLinkSettingsOut" />
  <wsdl:message name="mockInternalShortcutLinkSettingsIn">
    <wsdl:part name="settings" type="tns:InternalShortcutLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockInternalShortcutLinkSettingsOut" />
  <wsdl:message name="mockExcelLinkSettingsIn">
    <wsdl:part name="settings" type="tns:ExcelLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockExcelLinkSettingsOut" />
  <wsdl:message name="mockQPageLinkSettingsIn">
    <wsdl:part name="settings" type="tns:QPageLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockQPageLinkSettingsOut" />
  <wsdl:message name="mockLinkBundleLinkSettingsIn">
    <wsdl:part name="settings" type="tns:LinkBundleLinkSettings" />
  </wsdl:message>
  <wsdl:message name="mockLinkBundleLinkSettingsOut" />
  <wsdl:message name="mockLibraryLinkBundleItemIn">
    <wsdl:part name="item" type="tns:LibraryLinkBundleItem" />
  </wsdl:message>
  <wsdl:message name="mockLibraryLinkBundleItemOut" />
  <wsdl:message name="mockUrlLinkBundleItemIn">
    <wsdl:part name="item" type="tns:UrlLinkBundleItem" />
  </wsdl:message>
  <wsdl:message name="mockUrlLinkBundleItemOut" />
  <wsdl:message name="mockLinkBundleCoverItemIn">
    <wsdl:part name="item" type="tns:LinkBundleCoverItem" />
  </wsdl:message>
  <wsdl:message name="mockLinkBundleCoverItemOut" />
  <wsdl:message name="mockLinkBundleLaunchScreenItemIn">
    <wsdl:part name="item" type="tns:LinkBundleLaunchScreenItem" />
  </wsdl:message>
  <wsdl:message name="mockLinkBundleLaunchScreenItemOut" />
  <wsdl:message name="mockLinkBundleInfoItemIn">
    <wsdl:part name="item" type="tns:LinkBundleInfoItem" />
  </wsdl:message>
  <wsdl:message name="mockLinkBundleInfoItemOut" />
  <wsdl:message name="mockLinkBundleStrategyItemIn">
    <wsdl:part name="item" type="tns:LinkBundleStrategyItem" />
  </wsdl:message>
  <wsdl:message name="mockLinkBundleStrategyItemOut" />
  <wsdl:message name="mockLinkBundleRevenueItemIn">
    <wsdl:part name="item" type="tns:LinkBundleRevenueItem" />
  </wsdl:message>
  <wsdl:message name="mockLinkBundleRevenueItemOut" />
  <wsdl:message name="getSessionKeyIn">
    <wsdl:part name="login" type="xsd:string" />
    <wsdl:part name="password" type="xsd:string" />
  </wsdl:message>
  <wsdl:message name="getSessionKeyOut">
    <wsdl:part name="return" type="xsd:string" />
  </wsdl:message>
  <wsdl:portType name="ContentControllerPortType">
    <wsdl:operation name="mockLibrary">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLibraryIn" />
      <wsdl:output message="tns:mockLibraryOut" />
    </wsdl:operation>
    <wsdl:operation name="mockVideoLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockVideoLinkSettingsIn" />
      <wsdl:output message="tns:mockVideoLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockHyperLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockHyperLinkSettingsIn" />
      <wsdl:output message="tns:mockHyperLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockPowerPointLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockPowerPointLinkSettingsIn" />
      <wsdl:output message="tns:mockPowerPointLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockPowerDocumentSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockPowerDocumentSettingsIn" />
      <wsdl:output message="tns:mockPowerDocumentSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockAppLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockAppLinkSettingsIn" />
      <wsdl:output message="tns:mockAppLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockInternalWallbinLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockInternalWallbinLinkSettingsIn" />
      <wsdl:output message="tns:mockInternalWallbinLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockInternalLibraryPageLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockInternalLibraryPageLinkSettingsIn" />
      <wsdl:output message="tns:mockInternalLibraryPageLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockInternalLibraryFolderLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockInternalLibraryFolderLinkSettingsIn" />
      <wsdl:output message="tns:mockInternalLibraryFolderLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockInternalLibraryObjectLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockInternalLibraryObjectLinkSettingsIn" />
      <wsdl:output message="tns:mockInternalLibraryObjectLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockInternalShortcutLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockInternalShortcutLinkSettingsIn" />
      <wsdl:output message="tns:mockInternalShortcutLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockExcelLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockExcelLinkSettingsIn" />
      <wsdl:output message="tns:mockExcelLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockQPageLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockQPageLinkSettingsIn" />
      <wsdl:output message="tns:mockQPageLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleLinkSettings">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLinkBundleLinkSettingsIn" />
      <wsdl:output message="tns:mockLinkBundleLinkSettingsOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLibraryLinkBundleItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLibraryLinkBundleItemIn" />
      <wsdl:output message="tns:mockLibraryLinkBundleItemOut" />
    </wsdl:operation>
    <wsdl:operation name="mockUrlLinkBundleItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockUrlLinkBundleItemIn" />
      <wsdl:output message="tns:mockUrlLinkBundleItemOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleCoverItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLinkBundleCoverItemIn" />
      <wsdl:output message="tns:mockLinkBundleCoverItemOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleLaunchScreenItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLinkBundleLaunchScreenItemIn" />
      <wsdl:output message="tns:mockLinkBundleLaunchScreenItemOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleInfoItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLinkBundleInfoItemIn" />
      <wsdl:output message="tns:mockLinkBundleInfoItemOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleStrategyItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLinkBundleStrategyItemIn" />
      <wsdl:output message="tns:mockLinkBundleStrategyItemOut" />
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleRevenueItem">
      <wsdl:documentation />
      <wsdl:input message="tns:mockLinkBundleRevenueItemIn" />
      <wsdl:output message="tns:mockLinkBundleRevenueItemOut" />
    </wsdl:operation>
    <wsdl:operation name="getSessionKey">
      <wsdl:documentation />
      <wsdl:input message="tns:getSessionKeyIn" />
      <wsdl:output message="tns:getSessionKeyOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ContentControllerBinding" type="tns:ContentControllerPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <wsdl:operation name="mockLibrary">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLibrary" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockVideoLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockVideoLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockHyperLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockHyperLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockPowerPointLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockPowerPointLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockPowerDocumentSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockPowerDocumentSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockAppLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockAppLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockInternalWallbinLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockInternalWallbinLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockInternalLibraryPageLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockInternalLibraryPageLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockInternalLibraryFolderLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockInternalLibraryFolderLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockInternalLibraryObjectLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockInternalLibraryObjectLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockInternalShortcutLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockInternalShortcutLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockExcelLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockExcelLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockQPageLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockQPageLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleLinkSettings">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLinkBundleLinkSettings" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLibraryLinkBundleItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLibraryLinkBundleItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockUrlLinkBundleItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockUrlLinkBundleItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleCoverItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLinkBundleCoverItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleLaunchScreenItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLinkBundleLaunchScreenItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleInfoItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLinkBundleInfoItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleStrategyItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLinkBundleStrategyItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mockLinkBundleRevenueItem">
      <soap:operation soapAction="urn:ContentControllerwsdl#mockLinkBundleRevenueItem" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSessionKey">
      <soap:operation soapAction="urn:ContentControllerwsdl#getSessionKey" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:ContentControllerwsdl" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ContentControllerService">
    <wsdl:port name="ContentControllerPort" binding="tns:ContentControllerBinding">
      <soap:address location="http://localhost/SalesLibraries/content/quote?ws=1" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>