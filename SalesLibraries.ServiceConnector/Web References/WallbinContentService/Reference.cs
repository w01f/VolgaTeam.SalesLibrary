//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SalesLibraries.ServiceConnector.WallbinContentService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContentControllerBinding", Namespace="urn:ContentControllerwsdl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LinkBundleRevenueInfoItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BaseLinkBundleItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapUniversalPreviewContainer))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapAutoWidget))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserModel))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GroupModel))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapColumn))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LinkCategory))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LinkSuperFilter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapLibraryLink))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapLibraryFolder))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapLibraryPage))]
    public partial class ContentControllerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback mockLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockVideoLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockHyperLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockPowerPointLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockPowerDocumentSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockAppLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockInternalWallbinLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockInternalLibraryPageLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockInternalLibraryFolderLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockInternalLibraryObjectLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockExcelLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockQPageLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockLinkBundleLinkSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockLibraryLinkBundleItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockUrlLinkBundleItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockLinkBundleInfoItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockLinkBundleStrategyItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback mockLinkBundleRevenueItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContentControllerService() {
            this.Url = global::SalesLibraries.ServiceConnector.Properties.Settings.Default.SalesLibraries_ServiceConnector_WallbinContentService_ContentControllerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event mockLibraryCompletedEventHandler mockLibraryCompleted;
        
        /// <remarks/>
        public event mockVideoLinkSettingsCompletedEventHandler mockVideoLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockHyperLinkSettingsCompletedEventHandler mockHyperLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockPowerPointLinkSettingsCompletedEventHandler mockPowerPointLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockPowerDocumentSettingsCompletedEventHandler mockPowerDocumentSettingsCompleted;
        
        /// <remarks/>
        public event mockAppLinkSettingsCompletedEventHandler mockAppLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockInternalWallbinLinkSettingsCompletedEventHandler mockInternalWallbinLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockInternalLibraryPageLinkSettingsCompletedEventHandler mockInternalLibraryPageLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockInternalLibraryFolderLinkSettingsCompletedEventHandler mockInternalLibraryFolderLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockInternalLibraryObjectLinkSettingsCompletedEventHandler mockInternalLibraryObjectLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockExcelLinkSettingsCompletedEventHandler mockExcelLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockQPageLinkSettingsCompletedEventHandler mockQPageLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockLinkBundleLinkSettingsCompletedEventHandler mockLinkBundleLinkSettingsCompleted;
        
        /// <remarks/>
        public event mockLibraryLinkBundleItemCompletedEventHandler mockLibraryLinkBundleItemCompleted;
        
        /// <remarks/>
        public event mockUrlLinkBundleItemCompletedEventHandler mockUrlLinkBundleItemCompleted;
        
        /// <remarks/>
        public event mockLinkBundleInfoItemCompletedEventHandler mockLinkBundleInfoItemCompleted;
        
        /// <remarks/>
        public event mockLinkBundleStrategyItemCompletedEventHandler mockLinkBundleStrategyItemCompleted;
        
        /// <remarks/>
        public event mockLinkBundleRevenueItemCompletedEventHandler mockLinkBundleRevenueItemCompleted;
        
        /// <remarks/>
        public event getSessionKeyCompletedEventHandler getSessionKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockLibrary", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockLibrary(SoapLibrary library) {
            this.Invoke("mockLibrary", new object[] {
                        library});
        }
        
        /// <remarks/>
        public void mockLibraryAsync(SoapLibrary library) {
            this.mockLibraryAsync(library, null);
        }
        
        /// <remarks/>
        public void mockLibraryAsync(SoapLibrary library, object userState) {
            if ((this.mockLibraryOperationCompleted == null)) {
                this.mockLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockLibraryOperationCompleted);
            }
            this.InvokeAsync("mockLibrary", new object[] {
                        library}, this.mockLibraryOperationCompleted, userState);
        }
        
        private void OnmockLibraryOperationCompleted(object arg) {
            if ((this.mockLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockLibraryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockVideoLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockVideoLinkSettings(VideoLinkSettings settings) {
            this.Invoke("mockVideoLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockVideoLinkSettingsAsync(VideoLinkSettings settings) {
            this.mockVideoLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockVideoLinkSettingsAsync(VideoLinkSettings settings, object userState) {
            if ((this.mockVideoLinkSettingsOperationCompleted == null)) {
                this.mockVideoLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockVideoLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockVideoLinkSettings", new object[] {
                        settings}, this.mockVideoLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockVideoLinkSettingsOperationCompleted(object arg) {
            if ((this.mockVideoLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockVideoLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockHyperLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockHyperLinkSettings(HyperLinkSettings settings) {
            this.Invoke("mockHyperLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockHyperLinkSettingsAsync(HyperLinkSettings settings) {
            this.mockHyperLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockHyperLinkSettingsAsync(HyperLinkSettings settings, object userState) {
            if ((this.mockHyperLinkSettingsOperationCompleted == null)) {
                this.mockHyperLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockHyperLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockHyperLinkSettings", new object[] {
                        settings}, this.mockHyperLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockHyperLinkSettingsOperationCompleted(object arg) {
            if ((this.mockHyperLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockHyperLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockPowerPointLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockPowerPointLinkSettings(PowerPointLinkSettings settings) {
            this.Invoke("mockPowerPointLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockPowerPointLinkSettingsAsync(PowerPointLinkSettings settings) {
            this.mockPowerPointLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockPowerPointLinkSettingsAsync(PowerPointLinkSettings settings, object userState) {
            if ((this.mockPowerPointLinkSettingsOperationCompleted == null)) {
                this.mockPowerPointLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockPowerPointLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockPowerPointLinkSettings", new object[] {
                        settings}, this.mockPowerPointLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockPowerPointLinkSettingsOperationCompleted(object arg) {
            if ((this.mockPowerPointLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockPowerPointLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockPowerDocumentSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockPowerDocumentSettings(DocumentLinkSettings settings) {
            this.Invoke("mockPowerDocumentSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockPowerDocumentSettingsAsync(DocumentLinkSettings settings) {
            this.mockPowerDocumentSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockPowerDocumentSettingsAsync(DocumentLinkSettings settings, object userState) {
            if ((this.mockPowerDocumentSettingsOperationCompleted == null)) {
                this.mockPowerDocumentSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockPowerDocumentSettingsOperationCompleted);
            }
            this.InvokeAsync("mockPowerDocumentSettings", new object[] {
                        settings}, this.mockPowerDocumentSettingsOperationCompleted, userState);
        }
        
        private void OnmockPowerDocumentSettingsOperationCompleted(object arg) {
            if ((this.mockPowerDocumentSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockPowerDocumentSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockAppLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockAppLinkSettings(AppLinkSettings settings) {
            this.Invoke("mockAppLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockAppLinkSettingsAsync(AppLinkSettings settings) {
            this.mockAppLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockAppLinkSettingsAsync(AppLinkSettings settings, object userState) {
            if ((this.mockAppLinkSettingsOperationCompleted == null)) {
                this.mockAppLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockAppLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockAppLinkSettings", new object[] {
                        settings}, this.mockAppLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockAppLinkSettingsOperationCompleted(object arg) {
            if ((this.mockAppLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockAppLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockInternalWallbinLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockInternalWallbinLinkSettings(InternalWallbinLinkSettings settings) {
            this.Invoke("mockInternalWallbinLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockInternalWallbinLinkSettingsAsync(InternalWallbinLinkSettings settings) {
            this.mockInternalWallbinLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockInternalWallbinLinkSettingsAsync(InternalWallbinLinkSettings settings, object userState) {
            if ((this.mockInternalWallbinLinkSettingsOperationCompleted == null)) {
                this.mockInternalWallbinLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockInternalWallbinLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockInternalWallbinLinkSettings", new object[] {
                        settings}, this.mockInternalWallbinLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockInternalWallbinLinkSettingsOperationCompleted(object arg) {
            if ((this.mockInternalWallbinLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockInternalWallbinLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockInternalLibraryPageLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockInternalLibraryPageLinkSettings(InternalLibraryPageLinkSettings settings) {
            this.Invoke("mockInternalLibraryPageLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockInternalLibraryPageLinkSettingsAsync(InternalLibraryPageLinkSettings settings) {
            this.mockInternalLibraryPageLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockInternalLibraryPageLinkSettingsAsync(InternalLibraryPageLinkSettings settings, object userState) {
            if ((this.mockInternalLibraryPageLinkSettingsOperationCompleted == null)) {
                this.mockInternalLibraryPageLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockInternalLibraryPageLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockInternalLibraryPageLinkSettings", new object[] {
                        settings}, this.mockInternalLibraryPageLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockInternalLibraryPageLinkSettingsOperationCompleted(object arg) {
            if ((this.mockInternalLibraryPageLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockInternalLibraryPageLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockInternalLibraryFolderLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockInternalLibraryFolderLinkSettings(InternalLibraryFolderLinkSettings settings) {
            this.Invoke("mockInternalLibraryFolderLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockInternalLibraryFolderLinkSettingsAsync(InternalLibraryFolderLinkSettings settings) {
            this.mockInternalLibraryFolderLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockInternalLibraryFolderLinkSettingsAsync(InternalLibraryFolderLinkSettings settings, object userState) {
            if ((this.mockInternalLibraryFolderLinkSettingsOperationCompleted == null)) {
                this.mockInternalLibraryFolderLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockInternalLibraryFolderLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockInternalLibraryFolderLinkSettings", new object[] {
                        settings}, this.mockInternalLibraryFolderLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockInternalLibraryFolderLinkSettingsOperationCompleted(object arg) {
            if ((this.mockInternalLibraryFolderLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockInternalLibraryFolderLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockInternalLibraryObjectLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockInternalLibraryObjectLinkSettings(InternalLibraryObjectLinkSettings settings) {
            this.Invoke("mockInternalLibraryObjectLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockInternalLibraryObjectLinkSettingsAsync(InternalLibraryObjectLinkSettings settings) {
            this.mockInternalLibraryObjectLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockInternalLibraryObjectLinkSettingsAsync(InternalLibraryObjectLinkSettings settings, object userState) {
            if ((this.mockInternalLibraryObjectLinkSettingsOperationCompleted == null)) {
                this.mockInternalLibraryObjectLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockInternalLibraryObjectLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockInternalLibraryObjectLinkSettings", new object[] {
                        settings}, this.mockInternalLibraryObjectLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockInternalLibraryObjectLinkSettingsOperationCompleted(object arg) {
            if ((this.mockInternalLibraryObjectLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockInternalLibraryObjectLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockExcelLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockExcelLinkSettings(ExcelLinkSettings settings) {
            this.Invoke("mockExcelLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockExcelLinkSettingsAsync(ExcelLinkSettings settings) {
            this.mockExcelLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockExcelLinkSettingsAsync(ExcelLinkSettings settings, object userState) {
            if ((this.mockExcelLinkSettingsOperationCompleted == null)) {
                this.mockExcelLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockExcelLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockExcelLinkSettings", new object[] {
                        settings}, this.mockExcelLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockExcelLinkSettingsOperationCompleted(object arg) {
            if ((this.mockExcelLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockExcelLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockQPageLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockQPageLinkSettings(QPageLinkSettings settings) {
            this.Invoke("mockQPageLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockQPageLinkSettingsAsync(QPageLinkSettings settings) {
            this.mockQPageLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockQPageLinkSettingsAsync(QPageLinkSettings settings, object userState) {
            if ((this.mockQPageLinkSettingsOperationCompleted == null)) {
                this.mockQPageLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockQPageLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockQPageLinkSettings", new object[] {
                        settings}, this.mockQPageLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockQPageLinkSettingsOperationCompleted(object arg) {
            if ((this.mockQPageLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockQPageLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockLinkBundleLinkSettings", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockLinkBundleLinkSettings(LinkBundleLinkSettings settings) {
            this.Invoke("mockLinkBundleLinkSettings", new object[] {
                        settings});
        }
        
        /// <remarks/>
        public void mockLinkBundleLinkSettingsAsync(LinkBundleLinkSettings settings) {
            this.mockLinkBundleLinkSettingsAsync(settings, null);
        }
        
        /// <remarks/>
        public void mockLinkBundleLinkSettingsAsync(LinkBundleLinkSettings settings, object userState) {
            if ((this.mockLinkBundleLinkSettingsOperationCompleted == null)) {
                this.mockLinkBundleLinkSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockLinkBundleLinkSettingsOperationCompleted);
            }
            this.InvokeAsync("mockLinkBundleLinkSettings", new object[] {
                        settings}, this.mockLinkBundleLinkSettingsOperationCompleted, userState);
        }
        
        private void OnmockLinkBundleLinkSettingsOperationCompleted(object arg) {
            if ((this.mockLinkBundleLinkSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockLinkBundleLinkSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockLibraryLinkBundleItem", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockLibraryLinkBundleItem(LibraryLinkBundleItem item) {
            this.Invoke("mockLibraryLinkBundleItem", new object[] {
                        item});
        }
        
        /// <remarks/>
        public void mockLibraryLinkBundleItemAsync(LibraryLinkBundleItem item) {
            this.mockLibraryLinkBundleItemAsync(item, null);
        }
        
        /// <remarks/>
        public void mockLibraryLinkBundleItemAsync(LibraryLinkBundleItem item, object userState) {
            if ((this.mockLibraryLinkBundleItemOperationCompleted == null)) {
                this.mockLibraryLinkBundleItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockLibraryLinkBundleItemOperationCompleted);
            }
            this.InvokeAsync("mockLibraryLinkBundleItem", new object[] {
                        item}, this.mockLibraryLinkBundleItemOperationCompleted, userState);
        }
        
        private void OnmockLibraryLinkBundleItemOperationCompleted(object arg) {
            if ((this.mockLibraryLinkBundleItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockLibraryLinkBundleItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockUrlLinkBundleItem", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockUrlLinkBundleItem(UrlLinkBundleItem item) {
            this.Invoke("mockUrlLinkBundleItem", new object[] {
                        item});
        }
        
        /// <remarks/>
        public void mockUrlLinkBundleItemAsync(UrlLinkBundleItem item) {
            this.mockUrlLinkBundleItemAsync(item, null);
        }
        
        /// <remarks/>
        public void mockUrlLinkBundleItemAsync(UrlLinkBundleItem item, object userState) {
            if ((this.mockUrlLinkBundleItemOperationCompleted == null)) {
                this.mockUrlLinkBundleItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockUrlLinkBundleItemOperationCompleted);
            }
            this.InvokeAsync("mockUrlLinkBundleItem", new object[] {
                        item}, this.mockUrlLinkBundleItemOperationCompleted, userState);
        }
        
        private void OnmockUrlLinkBundleItemOperationCompleted(object arg) {
            if ((this.mockUrlLinkBundleItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockUrlLinkBundleItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockLinkBundleInfoItem", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockLinkBundleInfoItem(LinkBundleInfoItem item) {
            this.Invoke("mockLinkBundleInfoItem", new object[] {
                        item});
        }
        
        /// <remarks/>
        public void mockLinkBundleInfoItemAsync(LinkBundleInfoItem item) {
            this.mockLinkBundleInfoItemAsync(item, null);
        }
        
        /// <remarks/>
        public void mockLinkBundleInfoItemAsync(LinkBundleInfoItem item, object userState) {
            if ((this.mockLinkBundleInfoItemOperationCompleted == null)) {
                this.mockLinkBundleInfoItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockLinkBundleInfoItemOperationCompleted);
            }
            this.InvokeAsync("mockLinkBundleInfoItem", new object[] {
                        item}, this.mockLinkBundleInfoItemOperationCompleted, userState);
        }
        
        private void OnmockLinkBundleInfoItemOperationCompleted(object arg) {
            if ((this.mockLinkBundleInfoItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockLinkBundleInfoItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockLinkBundleStrategyItem", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockLinkBundleStrategyItem(LinkBundleStrategyItem item) {
            this.Invoke("mockLinkBundleStrategyItem", new object[] {
                        item});
        }
        
        /// <remarks/>
        public void mockLinkBundleStrategyItemAsync(LinkBundleStrategyItem item) {
            this.mockLinkBundleStrategyItemAsync(item, null);
        }
        
        /// <remarks/>
        public void mockLinkBundleStrategyItemAsync(LinkBundleStrategyItem item, object userState) {
            if ((this.mockLinkBundleStrategyItemOperationCompleted == null)) {
                this.mockLinkBundleStrategyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockLinkBundleStrategyItemOperationCompleted);
            }
            this.InvokeAsync("mockLinkBundleStrategyItem", new object[] {
                        item}, this.mockLinkBundleStrategyItemOperationCompleted, userState);
        }
        
        private void OnmockLinkBundleStrategyItemOperationCompleted(object arg) {
            if ((this.mockLinkBundleStrategyItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockLinkBundleStrategyItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#mockLinkBundleRevenueItem", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        public void mockLinkBundleRevenueItem(LinkBundleRevenueItem item) {
            this.Invoke("mockLinkBundleRevenueItem", new object[] {
                        item});
        }
        
        /// <remarks/>
        public void mockLinkBundleRevenueItemAsync(LinkBundleRevenueItem item) {
            this.mockLinkBundleRevenueItemAsync(item, null);
        }
        
        /// <remarks/>
        public void mockLinkBundleRevenueItemAsync(LinkBundleRevenueItem item, object userState) {
            if ((this.mockLinkBundleRevenueItemOperationCompleted == null)) {
                this.mockLinkBundleRevenueItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmockLinkBundleRevenueItemOperationCompleted);
            }
            this.InvokeAsync("mockLinkBundleRevenueItem", new object[] {
                        item}, this.mockLinkBundleRevenueItemOperationCompleted, userState);
        }
        
        private void OnmockLinkBundleRevenueItemOperationCompleted(object arg) {
            if ((this.mockLinkBundleRevenueItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mockLinkBundleRevenueItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ContentControllerwsdl#getSessionKey", RequestNamespace="urn:ContentControllerwsdl", ResponseNamespace="urn:ContentControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getSessionKey(string login, string password) {
            object[] results = this.Invoke("getSessionKey", new object[] {
                        login,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionKeyAsync(string login, string password) {
            this.getSessionKeyAsync(login, password, null);
        }
        
        /// <remarks/>
        public void getSessionKeyAsync(string login, string password, object userState) {
            if ((this.getSessionKeyOperationCompleted == null)) {
                this.getSessionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionKeyOperationCompleted);
            }
            this.InvokeAsync("getSessionKey", new object[] {
                        login,
                        password}, this.getSessionKeyOperationCompleted, userState);
        }
        
        private void OngetSessionKeyOperationCompleted(object arg) {
            if ((this.getSessionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionKeyCompleted(this, new getSessionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapLibrary {
        
        private string idField;
        
        private string nameField;
        
        private SoapLibraryPage[] pagesField;
        
        private SoapAutoWidget[] autoWidgetsField;
        
        private SoapUniversalPreviewContainer[] previewContainersField;
        
        private bool selectedField;
        
        private LibraryConfig configField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SoapLibraryPage[] pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        public SoapAutoWidget[] autoWidgets {
            get {
                return this.autoWidgetsField;
            }
            set {
                this.autoWidgetsField = value;
            }
        }
        
        /// <remarks/>
        public SoapUniversalPreviewContainer[] previewContainers {
            get {
                return this.previewContainersField;
            }
            set {
                this.previewContainersField = value;
            }
        }
        
        /// <remarks/>
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        public LibraryConfig config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapLibraryPage {
        
        private string idField;
        
        private string libraryIdField;
        
        private string nameField;
        
        private string libraryNameField;
        
        private int orderField;
        
        private SoapLibraryFolder[] foldersField;
        
        private bool enableColumnsField;
        
        private SoapColumn[] columnsField;
        
        private string dateModifyField;
        
        private bool selectedField;
        
        private GroupModel[] groupsField;
        
        private bool allGroupsField;
        
        private UserModel[] usersField;
        
        private bool allUsersField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string libraryName {
            get {
                return this.libraryNameField;
            }
            set {
                this.libraryNameField = value;
            }
        }
        
        /// <remarks/>
        public int order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public SoapLibraryFolder[] folders {
            get {
                return this.foldersField;
            }
            set {
                this.foldersField = value;
            }
        }
        
        /// <remarks/>
        public bool enableColumns {
            get {
                return this.enableColumnsField;
            }
            set {
                this.enableColumnsField = value;
            }
        }
        
        /// <remarks/>
        public SoapColumn[] columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
        
        /// <remarks/>
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        public GroupModel[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public bool allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
        /// <remarks/>
        public UserModel[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        public bool allUsers {
            get {
                return this.allUsersField;
            }
            set {
                this.allUsersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapLibraryFolder {
        
        private string idField;
        
        private string pageIdField;
        
        private string libraryIdField;
        
        private string nameField;
        
        private int rowOrderField;
        
        private int columnOrderField;
        
        private string borderColorField;
        
        private string windowBackColorField;
        
        private string windowForeColorField;
        
        private string headerBackColorField;
        
        private string headerForeColorField;
        
        private Font windowFontField;
        
        private Font headerFontField;
        
        private string headerAlignmentField;
        
        private bool enableWidgetField;
        
        private string widgetField;
        
        private SoapBanner bannerField;
        
        private SoapLibraryLink[] filesField;
        
        private string dateAddField;
        
        private string dateModifyField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string pageId {
            get {
                return this.pageIdField;
            }
            set {
                this.pageIdField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int rowOrder {
            get {
                return this.rowOrderField;
            }
            set {
                this.rowOrderField = value;
            }
        }
        
        /// <remarks/>
        public int columnOrder {
            get {
                return this.columnOrderField;
            }
            set {
                this.columnOrderField = value;
            }
        }
        
        /// <remarks/>
        public string borderColor {
            get {
                return this.borderColorField;
            }
            set {
                this.borderColorField = value;
            }
        }
        
        /// <remarks/>
        public string windowBackColor {
            get {
                return this.windowBackColorField;
            }
            set {
                this.windowBackColorField = value;
            }
        }
        
        /// <remarks/>
        public string windowForeColor {
            get {
                return this.windowForeColorField;
            }
            set {
                this.windowForeColorField = value;
            }
        }
        
        /// <remarks/>
        public string headerBackColor {
            get {
                return this.headerBackColorField;
            }
            set {
                this.headerBackColorField = value;
            }
        }
        
        /// <remarks/>
        public string headerForeColor {
            get {
                return this.headerForeColorField;
            }
            set {
                this.headerForeColorField = value;
            }
        }
        
        /// <remarks/>
        public Font windowFont {
            get {
                return this.windowFontField;
            }
            set {
                this.windowFontField = value;
            }
        }
        
        /// <remarks/>
        public Font headerFont {
            get {
                return this.headerFontField;
            }
            set {
                this.headerFontField = value;
            }
        }
        
        /// <remarks/>
        public string headerAlignment {
            get {
                return this.headerAlignmentField;
            }
            set {
                this.headerAlignmentField = value;
            }
        }
        
        /// <remarks/>
        public bool enableWidget {
            get {
                return this.enableWidgetField;
            }
            set {
                this.enableWidgetField = value;
            }
        }
        
        /// <remarks/>
        public string widget {
            get {
                return this.widgetField;
            }
            set {
                this.widgetField = value;
            }
        }
        
        /// <remarks/>
        public SoapBanner banner {
            get {
                return this.bannerField;
            }
            set {
                this.bannerField = value;
            }
        }
        
        /// <remarks/>
        public SoapLibraryLink[] files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
            }
        }
        
        /// <remarks/>
        public string dateAdd {
            get {
                return this.dateAddField;
            }
            set {
                this.dateAddField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class Font {
        
        private string nameField;
        
        private int sizeField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlinedField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderlined {
            get {
                return this.isUnderlinedField;
            }
            set {
                this.isUnderlinedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkBundleRevenueInfoItem {
        
        private string infoTypeField;
        
        private float valueField;
        
        /// <remarks/>
        public string infoType {
            get {
                return this.infoTypeField;
            }
            set {
                this.infoTypeField = value;
            }
        }
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkBundleRevenueItem {
        
        private int revenueTypeField;
        
        private string additionalInfoField;
        
        private LinkBundleRevenueInfoItem[] infoItemsField;
        
        private string idField;
        
        private int itemTypeField;
        
        private int collectionOrderField;
        
        private string imageField;
        
        private string titleField;
        
        private string hoverTipField;
        
        /// <remarks/>
        public int revenueType {
            get {
                return this.revenueTypeField;
            }
            set {
                this.revenueTypeField = value;
            }
        }
        
        /// <remarks/>
        public string additionalInfo {
            get {
                return this.additionalInfoField;
            }
            set {
                this.additionalInfoField = value;
            }
        }
        
        /// <remarks/>
        public LinkBundleRevenueInfoItem[] infoItems {
            get {
                return this.infoItemsField;
            }
            set {
                this.infoItemsField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int itemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int collectionOrder {
            get {
                return this.collectionOrderField;
            }
            set {
                this.collectionOrderField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string hoverTip {
            get {
                return this.hoverTipField;
            }
            set {
                this.hoverTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkBundleStrategyItem {
        
        private string headerField;
        
        private string bodyField;
        
        private string idField;
        
        private int itemTypeField;
        
        private int collectionOrderField;
        
        private string imageField;
        
        private string titleField;
        
        private string hoverTipField;
        
        /// <remarks/>
        public string header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int itemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int collectionOrder {
            get {
                return this.collectionOrderField;
            }
            set {
                this.collectionOrderField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string hoverTip {
            get {
                return this.hoverTipField;
            }
            set {
                this.hoverTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkBundleInfoItem {
        
        private string headerField;
        
        private string bodyField;
        
        private string idField;
        
        private int itemTypeField;
        
        private int collectionOrderField;
        
        private string imageField;
        
        private string titleField;
        
        private string hoverTipField;
        
        /// <remarks/>
        public string header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int itemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int collectionOrder {
            get {
                return this.collectionOrderField;
            }
            set {
                this.collectionOrderField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string hoverTip {
            get {
                return this.hoverTipField;
            }
            set {
                this.hoverTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class UrlLinkBundleItem {
        
        private string urlField;
        
        private string idField;
        
        private int itemTypeField;
        
        private int collectionOrderField;
        
        private string imageField;
        
        private string titleField;
        
        private string hoverTipField;
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int itemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int collectionOrder {
            get {
                return this.collectionOrderField;
            }
            set {
                this.collectionOrderField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string hoverTip {
            get {
                return this.hoverTipField;
            }
            set {
                this.hoverTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LibraryLinkBundleItem {
        
        private string libraryLinkIdField;
        
        private string idField;
        
        private int itemTypeField;
        
        private int collectionOrderField;
        
        private string imageField;
        
        private string titleField;
        
        private string hoverTipField;
        
        /// <remarks/>
        public string libraryLinkId {
            get {
                return this.libraryLinkIdField;
            }
            set {
                this.libraryLinkIdField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int itemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int collectionOrder {
            get {
                return this.collectionOrderField;
            }
            set {
                this.collectionOrderField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string hoverTip {
            get {
                return this.hoverTipField;
            }
            set {
                this.hoverTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class BaseLinkBundleItem {
        
        private string idField;
        
        private int itemTypeField;
        
        private int collectionOrderField;
        
        private string imageField;
        
        private string titleField;
        
        private string hoverTipField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int itemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int collectionOrder {
            get {
                return this.collectionOrderField;
            }
            set {
                this.collectionOrderField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string hoverTip {
            get {
                return this.hoverTipField;
            }
            set {
                this.hoverTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkBundleLinkSettings {
        
        private string customWebFormatField;
        
        private IBaseLinkBundleItem[] bundleItemsField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public string customWebFormat {
            get {
                return this.customWebFormatField;
            }
            set {
                this.customWebFormatField = value;
            }
        }
        
        /// <remarks/>
        public IBaseLinkBundleItem[] bundleItems {
            get {
                return this.bundleItemsField;
            }
            set {
                this.bundleItemsField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class QPageLinkSettings {
        
        private string qpageIdField;
        
        private bool forcePreviewField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public string qpageId {
            get {
                return this.qpageIdField;
            }
            set {
                this.qpageIdField = value;
            }
        }
        
        /// <remarks/>
        public bool forcePreview {
            get {
                return this.forcePreviewField;
            }
            set {
                this.forcePreviewField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class ExcelLinkSettings {
        
        private bool forceDownloadField;
        
        private bool forceOpenField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public bool forceDownload {
            get {
                return this.forceDownloadField;
            }
            set {
                this.forceDownloadField = value;
            }
        }
        
        /// <remarks/>
        public bool forceOpen {
            get {
                return this.forceOpenField;
            }
            set {
                this.forceOpenField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class InternalLibraryObjectLinkSettings {
        
        private int internalLinkTypeField;
        
        private string libraryNameField;
        
        private string pageNameField;
        
        private string windowNameField;
        
        private string linkNameField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public int internalLinkType {
            get {
                return this.internalLinkTypeField;
            }
            set {
                this.internalLinkTypeField = value;
            }
        }
        
        /// <remarks/>
        public string libraryName {
            get {
                return this.libraryNameField;
            }
            set {
                this.libraryNameField = value;
            }
        }
        
        /// <remarks/>
        public string pageName {
            get {
                return this.pageNameField;
            }
            set {
                this.pageNameField = value;
            }
        }
        
        /// <remarks/>
        public string windowName {
            get {
                return this.windowNameField;
            }
            set {
                this.windowNameField = value;
            }
        }
        
        /// <remarks/>
        public string linkName {
            get {
                return this.linkNameField;
            }
            set {
                this.linkNameField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class InternalLibraryFolderLinkSettings {
        
        private int internalLinkTypeField;
        
        private string libraryNameField;
        
        private string pageNameField;
        
        private string windowNameField;
        
        private string headerIconField;
        
        private bool showHeaderTextField;
        
        private string windowViewTypeField;
        
        private int columnField;
        
        private bool linksOnlyField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public int internalLinkType {
            get {
                return this.internalLinkTypeField;
            }
            set {
                this.internalLinkTypeField = value;
            }
        }
        
        /// <remarks/>
        public string libraryName {
            get {
                return this.libraryNameField;
            }
            set {
                this.libraryNameField = value;
            }
        }
        
        /// <remarks/>
        public string pageName {
            get {
                return this.pageNameField;
            }
            set {
                this.pageNameField = value;
            }
        }
        
        /// <remarks/>
        public string windowName {
            get {
                return this.windowNameField;
            }
            set {
                this.windowNameField = value;
            }
        }
        
        /// <remarks/>
        public string headerIcon {
            get {
                return this.headerIconField;
            }
            set {
                this.headerIconField = value;
            }
        }
        
        /// <remarks/>
        public bool showHeaderText {
            get {
                return this.showHeaderTextField;
            }
            set {
                this.showHeaderTextField = value;
            }
        }
        
        /// <remarks/>
        public string windowViewType {
            get {
                return this.windowViewTypeField;
            }
            set {
                this.windowViewTypeField = value;
            }
        }
        
        /// <remarks/>
        public int column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        public bool linksOnly {
            get {
                return this.linksOnlyField;
            }
            set {
                this.linksOnlyField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class InternalLibraryPageLinkSettings {
        
        private int internalLinkTypeField;
        
        private string libraryNameField;
        
        private string pageNameField;
        
        private string headerIconField;
        
        private bool showHeaderTextField;
        
        private string pageViewTypeField;
        
        private bool showLogoField;
        
        private bool showTextField;
        
        private bool showWindowHeadersField;
        
        private string textColorField;
        
        private string backColorField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public int internalLinkType {
            get {
                return this.internalLinkTypeField;
            }
            set {
                this.internalLinkTypeField = value;
            }
        }
        
        /// <remarks/>
        public string libraryName {
            get {
                return this.libraryNameField;
            }
            set {
                this.libraryNameField = value;
            }
        }
        
        /// <remarks/>
        public string pageName {
            get {
                return this.pageNameField;
            }
            set {
                this.pageNameField = value;
            }
        }
        
        /// <remarks/>
        public string headerIcon {
            get {
                return this.headerIconField;
            }
            set {
                this.headerIconField = value;
            }
        }
        
        /// <remarks/>
        public bool showHeaderText {
            get {
                return this.showHeaderTextField;
            }
            set {
                this.showHeaderTextField = value;
            }
        }
        
        /// <remarks/>
        public string pageViewType {
            get {
                return this.pageViewTypeField;
            }
            set {
                this.pageViewTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool showLogo {
            get {
                return this.showLogoField;
            }
            set {
                this.showLogoField = value;
            }
        }
        
        /// <remarks/>
        public bool showText {
            get {
                return this.showTextField;
            }
            set {
                this.showTextField = value;
            }
        }
        
        /// <remarks/>
        public bool showWindowHeaders {
            get {
                return this.showWindowHeadersField;
            }
            set {
                this.showWindowHeadersField = value;
            }
        }
        
        /// <remarks/>
        public string textColor {
            get {
                return this.textColorField;
            }
            set {
                this.textColorField = value;
            }
        }
        
        /// <remarks/>
        public string backColor {
            get {
                return this.backColorField;
            }
            set {
                this.backColorField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class InternalWallbinLinkSettings {
        
        private int internalLinkTypeField;
        
        private string libraryNameField;
        
        private string pageNameField;
        
        private string headerIconField;
        
        private bool showHeaderTextField;
        
        private string pageViewTypeField;
        
        private string pageSelectorTypeField;
        
        private bool showLogoField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public int internalLinkType {
            get {
                return this.internalLinkTypeField;
            }
            set {
                this.internalLinkTypeField = value;
            }
        }
        
        /// <remarks/>
        public string libraryName {
            get {
                return this.libraryNameField;
            }
            set {
                this.libraryNameField = value;
            }
        }
        
        /// <remarks/>
        public string pageName {
            get {
                return this.pageNameField;
            }
            set {
                this.pageNameField = value;
            }
        }
        
        /// <remarks/>
        public string headerIcon {
            get {
                return this.headerIconField;
            }
            set {
                this.headerIconField = value;
            }
        }
        
        /// <remarks/>
        public bool showHeaderText {
            get {
                return this.showHeaderTextField;
            }
            set {
                this.showHeaderTextField = value;
            }
        }
        
        /// <remarks/>
        public string pageViewType {
            get {
                return this.pageViewTypeField;
            }
            set {
                this.pageViewTypeField = value;
            }
        }
        
        /// <remarks/>
        public string pageSelectorType {
            get {
                return this.pageSelectorTypeField;
            }
            set {
                this.pageSelectorTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool showLogo {
            get {
                return this.showLogoField;
            }
            set {
                this.showLogoField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class AppLinkSettings {
        
        private string secondPathField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public string secondPath {
            get {
                return this.secondPathField;
            }
            set {
                this.secondPathField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class DocumentLinkSettings {
        
        private bool forcePreviewField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public bool forcePreview {
            get {
                return this.forcePreviewField;
            }
            set {
                this.forcePreviewField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class PowerPointLinkSettings {
        
        private float slideWidthField;
        
        private float slideHeightField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public float slideWidth {
            get {
                return this.slideWidthField;
            }
            set {
                this.slideWidthField = value;
            }
        }
        
        /// <remarks/>
        public float slideHeight {
            get {
                return this.slideHeightField;
            }
            set {
                this.slideHeightField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class HyperLinkSettings {
        
        private bool forcePreviewField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public bool forcePreview {
            get {
                return this.forcePreviewField;
            }
            set {
                this.forcePreviewField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class VideoLinkSettings {
        
        private bool forcePreviewField;
        
        private bool downloadSourceField;
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public bool forcePreview {
            get {
                return this.forcePreviewField;
            }
            set {
                this.forcePreviewField = value;
            }
        }
        
        /// <remarks/>
        public bool downloadSource {
            get {
                return this.downloadSourceField;
            }
            set {
                this.downloadSourceField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LibraryConfig {
        
        private string idField;
        
        private string libraryIdField;
        
        private string deadLinkSenderField;
        
        private string deadLinkRecipientsField;
        
        private string deadLinkSubjectField;
        
        private string deadLinkBodyField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string deadLinkSender {
            get {
                return this.deadLinkSenderField;
            }
            set {
                this.deadLinkSenderField = value;
            }
        }
        
        /// <remarks/>
        public string deadLinkRecipients {
            get {
                return this.deadLinkRecipientsField;
            }
            set {
                this.deadLinkRecipientsField = value;
            }
        }
        
        /// <remarks/>
        public string deadLinkSubject {
            get {
                return this.deadLinkSubjectField;
            }
            set {
                this.deadLinkSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string deadLinkBody {
            get {
                return this.deadLinkBodyField;
            }
            set {
                this.deadLinkBodyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapUniversalPreviewContainer {
        
        private string idField;
        
        private string libraryIdField;
        
        private string[] pngLinksField;
        
        private string[] pngPhoneLinksField;
        
        private string[] pdfLinksField;
        
        private string[] mp4LinksField;
        
        private string[] mp4ThumbLinksField;
        
        private string[] newOfficeFormatLinksField;
        
        private string[] thumbsLinksField;
        
        private string[] thumbsPhoneLinksField;
        
        private int thumbsWidthField;
        
        private int thumbsHeightField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] pngLinks {
            get {
                return this.pngLinksField;
            }
            set {
                this.pngLinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] pngPhoneLinks {
            get {
                return this.pngPhoneLinksField;
            }
            set {
                this.pngPhoneLinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] pdfLinks {
            get {
                return this.pdfLinksField;
            }
            set {
                this.pdfLinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] mp4Links {
            get {
                return this.mp4LinksField;
            }
            set {
                this.mp4LinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] mp4ThumbLinks {
            get {
                return this.mp4ThumbLinksField;
            }
            set {
                this.mp4ThumbLinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] newOfficeFormatLinks {
            get {
                return this.newOfficeFormatLinksField;
            }
            set {
                this.newOfficeFormatLinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] thumbsLinks {
            get {
                return this.thumbsLinksField;
            }
            set {
                this.thumbsLinksField = value;
            }
        }
        
        /// <remarks/>
        public string[] thumbsPhoneLinks {
            get {
                return this.thumbsPhoneLinksField;
            }
            set {
                this.thumbsPhoneLinksField = value;
            }
        }
        
        /// <remarks/>
        public int thumbsWidth {
            get {
                return this.thumbsWidthField;
            }
            set {
                this.thumbsWidthField = value;
            }
        }
        
        /// <remarks/>
        public int thumbsHeight {
            get {
                return this.thumbsHeightField;
            }
            set {
                this.thumbsHeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapAutoWidget {
        
        private string libraryIdField;
        
        private string extensionField;
        
        private string widgetField;
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public string widget {
            get {
                return this.widgetField;
            }
            set {
                this.widgetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class UserModel {
        
        private int idField;
        
        private string loginField;
        
        private string passwordField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string phoneField;
        
        private int roleField;
        
        private bool selectedField;
        
        private string dateAddField;
        
        private string dateModifyField;
        
        private GroupModel[] groupsField;
        
        private string groupNamesField;
        
        private bool allGroupsField;
        
        private SoapLibrary[] librariesField;
        
        private bool allLibrariesField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public int role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        public string dateAdd {
            get {
                return this.dateAddField;
            }
            set {
                this.dateAddField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
        
        /// <remarks/>
        public GroupModel[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public string groupNames {
            get {
                return this.groupNamesField;
            }
            set {
                this.groupNamesField = value;
            }
        }
        
        /// <remarks/>
        public bool allGroups {
            get {
                return this.allGroupsField;
            }
            set {
                this.allGroupsField = value;
            }
        }
        
        /// <remarks/>
        public SoapLibrary[] libraries {
            get {
                return this.librariesField;
            }
            set {
                this.librariesField = value;
            }
        }
        
        /// <remarks/>
        public bool allLibraries {
            get {
                return this.allLibrariesField;
            }
            set {
                this.allLibrariesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class GroupModel {
        
        private string idField;
        
        private string nameField;
        
        private bool selectedField;
        
        private UserModel[] usersField;
        
        private bool allUsersField;
        
        private SoapLibrary[] librariesField;
        
        private string[] libraryIdsField;
        
        private bool allLibrariesField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        public UserModel[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        public bool allUsers {
            get {
                return this.allUsersField;
            }
            set {
                this.allUsersField = value;
            }
        }
        
        /// <remarks/>
        public SoapLibrary[] libraries {
            get {
                return this.librariesField;
            }
            set {
                this.librariesField = value;
            }
        }
        
        /// <remarks/>
        public string[] libraryIds {
            get {
                return this.libraryIdsField;
            }
            set {
                this.libraryIdsField = value;
            }
        }
        
        /// <remarks/>
        public bool allLibraries {
            get {
                return this.allLibrariesField;
            }
            set {
                this.allLibrariesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapColumn {
        
        private string pageIdField;
        
        private string libraryIdField;
        
        private string nameField;
        
        private int orderField;
        
        private string backColorField;
        
        private string foreColorField;
        
        private Font fontField;
        
        private bool showTextField;
        
        private string alignmentField;
        
        private bool enableWidgetField;
        
        private string widgetField;
        
        private SoapBanner bannerField;
        
        private string dateModifyField;
        
        /// <remarks/>
        public string pageId {
            get {
                return this.pageIdField;
            }
            set {
                this.pageIdField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string backColor {
            get {
                return this.backColorField;
            }
            set {
                this.backColorField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public bool showText {
            get {
                return this.showTextField;
            }
            set {
                this.showTextField = value;
            }
        }
        
        /// <remarks/>
        public string alignment {
            get {
                return this.alignmentField;
            }
            set {
                this.alignmentField = value;
            }
        }
        
        /// <remarks/>
        public bool enableWidget {
            get {
                return this.enableWidgetField;
            }
            set {
                this.enableWidgetField = value;
            }
        }
        
        /// <remarks/>
        public string widget {
            get {
                return this.widgetField;
            }
            set {
                this.widgetField = value;
            }
        }
        
        /// <remarks/>
        public SoapBanner banner {
            get {
                return this.bannerField;
            }
            set {
                this.bannerField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapBanner {
        
        private string idField;
        
        private string libraryIdField;
        
        private bool isEnabledField;
        
        private string imageField;
        
        private bool showTextField;
        
        private string imageAlignmentField;
        
        private string imageVerticalAlignmentField;
        
        private string textField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private string dateModifyField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public bool isEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public bool showText {
            get {
                return this.showTextField;
            }
            set {
                this.showTextField = value;
            }
        }
        
        /// <remarks/>
        public string imageAlignment {
            get {
                return this.imageAlignmentField;
            }
            set {
                this.imageAlignmentField = value;
            }
        }
        
        /// <remarks/>
        public string imageVerticalAlignment {
            get {
                return this.imageVerticalAlignmentField;
            }
            set {
                this.imageVerticalAlignmentField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkCategory {
        
        private string linkIdField;
        
        private string libraryIdField;
        
        private string categoryField;
        
        private string tagField;
        
        /// <remarks/>
        public string linkId {
            get {
                return this.linkIdField;
            }
            set {
                this.linkIdField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LinkSuperFilter {
        
        private string linkIdField;
        
        private string libraryIdField;
        
        private string valueField;
        
        /// <remarks/>
        public string linkId {
            get {
                return this.linkIdField;
            }
            set {
                this.linkIdField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class LineBreak {
        
        private string idField;
        
        private string libraryIdField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private string noteField;
        
        private string dateModifyField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class BaseLinkSettings {
        
        private string noteField;
        
        private string hoverNoteField;
        
        private bool showOnlyCustomHoverNoteField;
        
        private bool isBoldField;
        
        private bool isItalicField;
        
        private bool isUnderlineField;
        
        private bool isSpecialFormatField;
        
        private Font fontField;
        
        private string foreColorField;
        
        private bool isTextWordWrapField;
        
        private bool isRestrictedField;
        
        private bool noShareField;
        
        private string assignedUsersField;
        
        private string deniedUsersField;
        
        private string quickLinkUrlField;
        
        private string quickLinkTitleField;
        
        /// <remarks/>
        public string note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string hoverNote {
            get {
                return this.hoverNoteField;
            }
            set {
                this.hoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool showOnlyCustomHoverNote {
            get {
                return this.showOnlyCustomHoverNoteField;
            }
            set {
                this.showOnlyCustomHoverNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool isBold {
            get {
                return this.isBoldField;
            }
            set {
                this.isBoldField = value;
            }
        }
        
        /// <remarks/>
        public bool isItalic {
            get {
                return this.isItalicField;
            }
            set {
                this.isItalicField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnderline {
            get {
                return this.isUnderlineField;
            }
            set {
                this.isUnderlineField = value;
            }
        }
        
        /// <remarks/>
        public bool isSpecialFormat {
            get {
                return this.isSpecialFormatField;
            }
            set {
                this.isSpecialFormatField = value;
            }
        }
        
        /// <remarks/>
        public Font font {
            get {
                return this.fontField;
            }
            set {
                this.fontField = value;
            }
        }
        
        /// <remarks/>
        public string foreColor {
            get {
                return this.foreColorField;
            }
            set {
                this.foreColorField = value;
            }
        }
        
        /// <remarks/>
        public bool isTextWordWrap {
            get {
                return this.isTextWordWrapField;
            }
            set {
                this.isTextWordWrapField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public bool noShare {
            get {
                return this.noShareField;
            }
            set {
                this.noShareField = value;
            }
        }
        
        /// <remarks/>
        public string assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string deniedUsers {
            get {
                return this.deniedUsersField;
            }
            set {
                this.deniedUsersField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkUrl {
            get {
                return this.quickLinkUrlField;
            }
            set {
                this.quickLinkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string quickLinkTitle {
            get {
                return this.quickLinkTitleField;
            }
            set {
                this.quickLinkTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ContentControllerwsdl")]
    public partial class SoapLibraryLink {
        
        private string idField;
        
        private string parentLinkIdField;
        
        private string folderIdField;
        
        private string libraryIdField;
        
        private string nameField;
        
        private string fileRelativePathField;
        
        private string fileNameField;
        
        private string fileExtensionField;
        
        private string fileDateField;
        
        private int fileSizeField;
        
        private string originalFormatField;
        
        private string searchFormatField;
        
        private int orderField;
        
        private int typeField;
        
        private IBaseLinkSettings extendedPropertiesField;
        
        private LineBreak lineBreakPropertiesField;
        
        private int widgetTypeField;
        
        private string widgetField;
        
        private SoapBanner bannerField;
        
        private string previewIdField;
        
        private LinkSuperFilter[] superFiltersField;
        
        private LinkCategory[] categoriesField;
        
        private string tagsField;
        
        private string dateAddField;
        
        private string dateModifyField;
        
        private string contentPathField;
        
        private bool isDeadField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string parentLinkId {
            get {
                return this.parentLinkIdField;
            }
            set {
                this.parentLinkIdField = value;
            }
        }
        
        /// <remarks/>
        public string folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        public string libraryId {
            get {
                return this.libraryIdField;
            }
            set {
                this.libraryIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string fileRelativePath {
            get {
                return this.fileRelativePathField;
            }
            set {
                this.fileRelativePathField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string fileExtension {
            get {
                return this.fileExtensionField;
            }
            set {
                this.fileExtensionField = value;
            }
        }
        
        /// <remarks/>
        public string fileDate {
            get {
                return this.fileDateField;
            }
            set {
                this.fileDateField = value;
            }
        }
        
        /// <remarks/>
        public int fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public string originalFormat {
            get {
                return this.originalFormatField;
            }
            set {
                this.originalFormatField = value;
            }
        }
        
        /// <remarks/>
        public string searchFormat {
            get {
                return this.searchFormatField;
            }
            set {
                this.searchFormatField = value;
            }
        }
        
        /// <remarks/>
        public int order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public IBaseLinkSettings extendedProperties {
            get {
                return this.extendedPropertiesField;
            }
            set {
                this.extendedPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public LineBreak lineBreakProperties {
            get {
                return this.lineBreakPropertiesField;
            }
            set {
                this.lineBreakPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public int widgetType {
            get {
                return this.widgetTypeField;
            }
            set {
                this.widgetTypeField = value;
            }
        }
        
        /// <remarks/>
        public string widget {
            get {
                return this.widgetField;
            }
            set {
                this.widgetField = value;
            }
        }
        
        /// <remarks/>
        public SoapBanner banner {
            get {
                return this.bannerField;
            }
            set {
                this.bannerField = value;
            }
        }
        
        /// <remarks/>
        public string previewId {
            get {
                return this.previewIdField;
            }
            set {
                this.previewIdField = value;
            }
        }
        
        /// <remarks/>
        public LinkSuperFilter[] superFilters {
            get {
                return this.superFiltersField;
            }
            set {
                this.superFiltersField = value;
            }
        }
        
        /// <remarks/>
        public LinkCategory[] categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public string dateAdd {
            get {
                return this.dateAddField;
            }
            set {
                this.dateAddField = value;
            }
        }
        
        /// <remarks/>
        public string dateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
        
        /// <remarks/>
        public string contentPath {
            get {
                return this.contentPathField;
            }
            set {
                this.contentPathField = value;
            }
        }
        
        /// <remarks/>
        public bool isDead {
            get {
                return this.isDeadField;
            }
            set {
                this.isDeadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockLibraryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockVideoLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockHyperLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockPowerPointLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockPowerDocumentSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockAppLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockInternalWallbinLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockInternalLibraryPageLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockInternalLibraryFolderLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockInternalLibraryObjectLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockExcelLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockQPageLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockLinkBundleLinkSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockLibraryLinkBundleItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockUrlLinkBundleItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockLinkBundleInfoItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockLinkBundleStrategyItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void mockLinkBundleRevenueItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSessionKeyCompletedEventHandler(object sender, getSessionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591